"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import Modal from "../../_components/Modal";
import Knapp from "../../_components/Knapp";
import LoadingSpinner from "../../_components/LoadingSpinner";
import { getLeverant√∂rer, type Leverant√∂r } from "../actions";

interface V√§ljLeverant√∂rModalProps {
  isOpen: boolean;
  onClose: () => void;
}

export default function V√§ljLeverant√∂rModal({ isOpen, onClose }: V√§ljLeverant√∂rModalProps) {
  const [leverant√∂rer, setLeverant√∂rer] = useState<Leverant√∂r[]>([]);
  const [loading, setLoading] = useState(true);
  const [selectedLeverant√∂r, setSelectedLeverant√∂r] = useState<number | null>(null);
  const router = useRouter();

  const loadLeverant√∂rer = async () => {
    setLoading(true);
    const result = await getLeverant√∂rer();
    if (result.success) {
      setLeverant√∂rer(result.leverant√∂rer || []);
    }
    setLoading(false);
  };

  useEffect(() => {
    if (isOpen) {
      loadLeverant√∂rer();
    }
  }, [isOpen]);

  const handleContinue = () => {
    if (selectedLeverant√∂r) {
      onClose();
      router.push(`/faktura/Leverantorsfakturor/bokfor?leverantorId=${selectedLeverant√∂r}`);
    }
  };

  return (
    <Modal isOpen={isOpen} onClose={onClose} title="V√§lj leverant√∂r" maxWidth="lg">
      <div className="p-6">
        {loading ? (
          <div className="flex justify-center items-center py-8">
            <LoadingSpinner />
          </div>
        ) : leverant√∂rer.length === 0 ? (
          <div className="text-center py-8">
            <div className="text-4xl mb-4">üè¢</div>
            <h3 className="text-lg text-white mb-2">Inga leverant√∂rer √§nnu</h3>
            <p className="text-gray-400 mb-4">
              Du m√•ste f√∂rst skapa en leverant√∂r innan du kan registrera en leverant√∂rsfaktura.
            </p>
            <Knapp text="St√§ng" onClick={onClose} className="bg-gray-600 hover:bg-gray-700" />
          </div>
        ) : (
          <>
            <p className="text-gray-300 mb-4">V√§lj vilken leverant√∂r denna faktura kommer fr√•n:</p>

            <div className="space-y-2 mb-6 max-h-60 overflow-y-auto">
              {leverant√∂rer.map((leverant√∂r) => (
                <div
                  key={leverant√∂r.id}
                  className={`p-3 rounded-lg border cursor-pointer transition-colors ${
                    selectedLeverant√∂r === leverant√∂r.id
                      ? "border-cyan-500 bg-cyan-500/20"
                      : "border-slate-600 bg-slate-800 hover:border-slate-500"
                  }`}
                  onClick={() => setSelectedLeverant√∂r(leverant√∂r.id!)}
                >
                  <div className="font-medium text-white">{leverant√∂r.namn}</div>
                  {leverant√∂r.organisationsnummer && (
                    <div className="text-sm text-gray-400">
                      Org-nr: {leverant√∂r.organisationsnummer}
                    </div>
                  )}
                  {leverant√∂r.email && (
                    <div className="text-sm text-gray-400">{leverant√∂r.email}</div>
                  )}
                </div>
              ))}
            </div>

            <div className="flex gap-4">
              <Knapp text="Avbryt" onClick={onClose} className="bg-gray-600 hover:bg-gray-700" />
              <Knapp
                text="Forts√§tt till bokf√∂ring"
                onClick={handleContinue}
                disabled={!selectedLeverant√∂r}
              />
            </div>
          </>
        )}
      </div>
    </Modal>
  );
}
