//#region Huvud
import AnimeradFlik from "../../_components/AnimeradFlik";
import ToppInfo from "./ToppInfo";
import Lonekomponenter from "./Lonekomponenter/Lonekomponenter/Lonekomponenter";
import Utlogg from "./Utlogg";
import Sammanfattning from "./Sammanfattning";
import Knapp from "../../_components/Knapp";
import StatusBadge from "./StatusBadge";
import { useState } from "react";
import Forhandsgranskning from "./Forhandsgranskning/Forhandsgranskning/Forhandsgranskning";
import { useLonespecContext } from "./LonespecContext";

interface L칬nespecCardProps {
  l칬nespec: any;
  anst칛lld: any;
  utl칛gg: any[];
  ingenAnimering?: boolean;
  onTaBortL칬nespec?: () => void;
  taBortLoading?: boolean;
  f칬retagsprofil?: any; // L칛gg till denna om du vill skicka f칬retagsprofil till MailaLonespec
  visaExtraRader?: boolean; // NY PROP
}

export default function L칬nespecCard({
  l칬nespec,
  anst칛lld,
  utl칛gg,
  ingenAnimering,
  onTaBortL칬nespec,
  taBortLoading,
  f칬retagsprofil,
  visaExtraRader = false,
}: L칬nespecCardProps) {
  const { ber칛knadeV칛rden, setBer칛knadeV칛rden, extrarader, setExtrarader } = useLonespecContext();
  //#endregion

  //#region Helper Functions
  function getM친nadsNamn(m친nad: number, 친r: number): string {
    const m친nader = [
      "Januari",
      "Februari",
      "Mars",
      "April",
      "Maj",
      "Juni",
      "Juli",
      "Augusti",
      "September",
      "Oktober",
      "November",
      "December",
    ];
    return `${m친nader[m친nad - 1]} ${친r}`;
  }
  //#endregion

  //#region Data Processing
  const m친nadsNamn = getM친nadsNamn(l칬nespec.m친nad || 1, l칬nespec.친r || 2025);
  const grundl칬n = parseFloat(l칬nespec.grundl칬n || l칬nespec.bruttol칬n || 0);
  const 칬vertid = parseFloat(l칬nespec.칬vertid || 0);
  const bruttol칬n = parseFloat(l칬nespec.bruttol칬n || 0);
  const socialaAvgifter = parseFloat(l칬nespec.sociala_avgifter || 0);
  const skatt = parseFloat(l칬nespec.skatt || 0);
  const nettol칬n = parseFloat(l칬nespec.nettol칬n || 0);
  const utbetalningsDatum = new Date(l칬nespec.친r, (l칬nespec.m친nad || 1) - 1, 25);

  // H칛mta ber칛knade v칛rden f칬r denna l칬nespec
  const aktuellBer칛kning = ber칛knadeV칛rden[l칬nespec.id];

  // Anv칛nd ber칛knade v칛rden om de finns, annars fallback till originala
  const visaBruttol칬n = aktuellBer칛kning?.bruttol칬n ?? bruttol칬n;
  const visaSkatt = aktuellBer칛kning?.skatt ?? skatt;
  const visaNettol칬n = aktuellBer칛kning?.nettol칬n ?? nettol칬n;
  const visaSocialaAvgifter = aktuellBer칛kning?.socialaAvgifter ?? socialaAvgifter;
  const visaL칬nekostnad = aktuellBer칛kning?.l칬nekostnad ?? bruttol칬n + socialaAvgifter;

  const l칬nespecUtlogg = utl칛gg.filter(
    (u) => u.l칬nespecifikation_id === l칬nespec.id || !u.l칬nespecifikation_id
  );
  //#endregion

  //#region Render Content
  const [visaForhandsgranskning, setVisaForhandsgranskning] = useState(false);

  const inneh친ll = (
    <div className="space-y-6">
      <ToppInfo
        m친nadsNamn={m친nadsNamn}
        l칬nespec={l칬nespec}
        anst칛lld={anst칛lld}
        getL칬nespecStatusBadge={(status: string) => <StatusBadge status={status} type="l칬nespec" />}
      />

      <Lonekomponenter
        grundl칬n={grundl칬n}
        칬vertid={칬vertid}
        l칬nespec={l칬nespec}
        visaExtraRader={visaExtraRader}
      />

      <Utlogg
        l칬nespecUtlogg={l칬nespecUtlogg}
        getStatusBadge={(status: string) => <StatusBadge status={status} type="utl칛gg" />}
      />

      <Sammanfattning
        utbetalningsDatum={utbetalningsDatum}
        nettol칬n={visaNettol칬n}
        l칬nespec={l칬nespec}
        anst칛lld={anst칛lld}
        bruttol칬n={visaBruttol칬n}
        skatt={visaSkatt}
        socialaAvgifter={visaSocialaAvgifter}
        l칬nekostnad={visaL칬nekostnad}
      />

      {visaForhandsgranskning && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/40">
          <div className="bg-white rounded-lg shadow-xl max-w-2xl w-full p-6 relative">
            <button
              className="absolute top-2 right-2 text-2xl text-gray-500 hover:text-black"
              onClick={() => setVisaForhandsgranskning(false)}
              aria-label="St칛ng"
            >
              칑
            </button>
            <Forhandsgranskning
              l칬nespec={l칬nespec}
              anst칛lld={anst칛lld}
              f칬retagsprofil={f칬retagsprofil}
              extrarader={extrarader[l칬nespec.id] || []}
              ber칛knadeV칛rden={ber칛knadeV칛rden[l칬nespec.id] || {}}
              onSt칛ng={() => setVisaForhandsgranskning(false)}
            />
          </div>
        </div>
      )}
    </div>
  );

  // Om ingenAnimering = true, visa bara inneh친llet direkt
  if (ingenAnimering) {
    return inneh친ll;
  }

  // Annars visa med AnimeradFlik som vanligt
  return (
    <AnimeradFlik
      key={l칬nespec.id}
      title={`L칬nespec ${m친nadsNamn}`}
      icon="游늰"
      visaSummaDirekt={`Netto: ${visaNettol칬n.toLocaleString("sv-SE")} kr`}
    >
      {inneh친ll}
    </AnimeradFlik>
  );
  //#endregion
}
