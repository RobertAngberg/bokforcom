//#region Huvud
import AnimeradFlik from "../../_components/AnimeradFlik";
import ToppInfo from "./ToppInfo";
import Lonekomponenter from "./Lonekomponenter/Lonekomponenter/Lonekomponenter";
import Utlagg from "./Utlagg";
import Sammanfattning from "./Sammanfattning";
import Knapp from "../../_components/Knapp";
import StatusBadge from "./StatusBadge";
import { useState } from "react";
import Forhandsgranskning from "./Forhandsgranskning/Forhandsgranskning/Forhandsgranskning";
import { useLonespecContext } from "./LonespecContext";

interface L√∂nespecViewProps {
  l√∂nespec: any;
  anst√§lld: any;
  utl√§gg: any[];
  ingenAnimering?: boolean;
  onTaBortL√∂nespec?: () => void;
  taBortLoading?: boolean;
  f√∂retagsprofil?: any; // L√§gg till denna om du vill skicka f√∂retagsprofil till MailaLonespec
  visaExtraRader?: boolean; // NY PROP
}

export default function L√∂nespecView({
  l√∂nespec,
  anst√§lld,
  utl√§gg,
  ingenAnimering,
  onTaBortL√∂nespec,
  taBortLoading,
  f√∂retagsprofil,
  visaExtraRader = false,
}: L√∂nespecViewProps) {
  const { ber√§knadeV√§rden, setBer√§knadeV√§rden, extrarader, setExtrarader } = useLonespecContext();
  //#endregion

  //#region Helper Functions
  function getM√•nadsNamn(m√•nad: number, √•r: number): string {
    const m√•nader = [
      "Januari",
      "Februari",
      "Mars",
      "April",
      "Maj",
      "Juni",
      "Juli",
      "Augusti",
      "September",
      "Oktober",
      "November",
      "December",
    ];
    return `${m√•nader[m√•nad - 1]} ${√•r}`;
  }
  //#endregion

  //#region Data Processing
  const m√•nadsNamn = getM√•nadsNamn(l√∂nespec.m√•nad || 1, l√∂nespec.√•r || 2025);
  const grundl√∂n = parseFloat(l√∂nespec.grundl√∂n || l√∂nespec.bruttol√∂n || 0);
  const √∂vertid = parseFloat(l√∂nespec.√∂vertid || 0);
  const bruttol√∂n = parseFloat(l√∂nespec.bruttol√∂n || 0);
  const socialaAvgifter = parseFloat(l√∂nespec.sociala_avgifter || 0);
  const skatt = parseFloat(l√∂nespec.skatt || 0);
  const nettol√∂n = parseFloat(l√∂nespec.nettol√∂n || 0);
  // Fix: Use l√∂nespec.utbetalningsdatum if available, otherwise fallback to old logic
  const utbetalningsDatum = l√∂nespec.utbetalningsdatum
    ? new Date(l√∂nespec.utbetalningsdatum)
    : new Date(l√∂nespec.√•r, (l√∂nespec.m√•nad || 1) - 1, 25);

  // H√§mta ber√§knade v√§rden f√∂r denna l√∂nespec
  const aktuellBer√§kning = ber√§knadeV√§rden[l√∂nespec.id];

  // Anv√§nd ber√§knade v√§rden om de finns, annars fallback till originala
  const visaBruttol√∂n = aktuellBer√§kning?.bruttol√∂n ?? bruttol√∂n;
  const visaSkatt = aktuellBer√§kning?.skatt ?? skatt;
  const visaNettol√∂n = aktuellBer√§kning?.nettol√∂n ?? nettol√∂n;
  const visaSocialaAvgifter = aktuellBer√§kning?.socialaAvgifter ?? socialaAvgifter;
  const visaL√∂nekostnad = aktuellBer√§kning?.l√∂nekostnad ?? bruttol√∂n + socialaAvgifter;

  const l√∂nespecUtl√§gg = utl√§gg.filter(
    (u) => u.l√∂nespecifikation_id === l√∂nespec.id || !u.l√∂nespecifikation_id
  );
  //#endregion

  //#region Render Content
  const [visaForhandsgranskning, setVisaForhandsgranskning] = useState(false);

  const inneh√•ll = (
    <div className="space-y-6">
      <ToppInfo
        m√•nadsNamn={m√•nadsNamn}
        l√∂nespec={l√∂nespec}
        anst√§lld={anst√§lld}
        getL√∂nespecStatusBadge={(status: string) => <StatusBadge status={status} type="l√∂nespec" />}
      />

      <Lonekomponenter
        grundl√∂n={grundl√∂n}
        √∂vertid={√∂vertid}
        l√∂nespec={l√∂nespec}
        visaExtraRader={visaExtraRader}
        anstalldId={anst√§lld?.id}
      />

      <Utlagg
        l√∂nespecUtl√§gg={l√∂nespecUtl√§gg}
        getStatusBadge={(status: string) => <StatusBadge status={status} type="utl√§gg" />}
        l√∂nespecId={l√∂nespec?.id}
      />

      <Sammanfattning
        utbetalningsDatum={utbetalningsDatum}
        nettol√∂n={visaNettol√∂n}
        l√∂nespec={l√∂nespec}
        anst√§lld={anst√§lld}
        bruttol√∂n={visaBruttol√∂n}
        skatt={visaSkatt}
        socialaAvgifter={visaSocialaAvgifter}
        l√∂nekostnad={visaL√∂nekostnad}
      />

      <div className="flex gap-3 mt-4 justify-between items-center">
        <Knapp text="üëÅÔ∏è F√∂rhandsgranska / PDF" onClick={() => setVisaForhandsgranskning(true)} />
        {onTaBortL√∂nespec && (
          <div className="flex-1 flex justify-end">
            <Knapp
              text={taBortLoading ? "üóëÔ∏è Tar bort..." : "üóëÔ∏è Ta bort"}
              onClick={onTaBortL√∂nespec}
              disabled={taBortLoading}
            />
          </div>
        )}
      </div>

      {visaForhandsgranskning && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/40">
          <div className="bg-white rounded-lg shadow-xl max-w-2xl w-full p-6 relative">
            <button
              className="absolute top-2 right-2 text-2xl text-gray-500 hover:text-black"
              onClick={() => setVisaForhandsgranskning(false)}
              aria-label="St√§ng"
            >
              √ó
            </button>
            <Forhandsgranskning
              l√∂nespec={l√∂nespec}
              anst√§lld={anst√§lld}
              f√∂retagsprofil={f√∂retagsprofil}
              extrarader={extrarader[l√∂nespec.id] || []}
              ber√§knadeV√§rden={ber√§knadeV√§rden[l√∂nespec.id] || {}}
              onSt√§ng={() => setVisaForhandsgranskning(false)}
            />
          </div>
        </div>
      )}
    </div>
  );

  // Om ingenAnimering = true, visa bara inneh√•llet direkt
  if (ingenAnimering) {
    return inneh√•ll;
  }

  // Annars visa med AnimeradFlik som vanligt
  const namn = anst√§lld ? `${anst√§lld.f√∂rnamn || ""} ${anst√§lld.efternamn || ""}`.trim() : "Ok√§nd";
  return (
    <AnimeradFlik
      key={l√∂nespec.id}
      title={namn}
      icon=""
      visaSummaDirekt={`Netto: ${visaNettol√∂n.toLocaleString("sv-SE")} kr`}
    >
      {inneh√•ll}
    </AnimeradFlik>
  );
  //#endregion
}
