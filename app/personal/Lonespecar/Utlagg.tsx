//#region Huvud
import { l√§ggTillUtl√§ggIL√∂nespec } from "../actions";

interface Utl√§ggProps {
  l√∂nespecUtl√§gg: any[];
  getStatusBadge: (status: string) => React.ReactElement;
  l√∂nespecId?: number;
}

export default function Utl√§gg({ l√∂nespecUtl√§gg, getStatusBadge, l√∂nespecId }: Utl√§ggProps) {
  //#endregion

  if (l√∂nespecUtl√§gg.length === 0) return null;

  return (
    <div className="bg-slate-700 p-4 rounded-lg">
      <h4 className="text-lg font-bold text-white mb-4 flex items-center gap-2">
        Utl√§gg asdf üéØ VI √ÑR H√ÑR üéØ
      </h4>

      {/* L√§gg till utl√§gg knapp i mitten */}
      <div className="flex justify-center mb-4">
        <button 
          className="bg-cyan-600 hover:bg-cyan-700 text-white font-bold py-3 px-6 rounded-lg transition-colors"
          onClick={async () => {
            if (!l√∂nespecId) {
              console.error("‚ùå Ingen l√∂nespecId tillg√§nglig!");
              alert("‚ùå Fel: Ingen l√∂nespec ID hittades");
              return;
            }
            
            console.log("üéØ L√ÑGG TILL UTL√ÑGG KLICKAD!");
            console.log("üìã L√∂nespecId:", l√∂nespecId);
            console.log("üìã Befintliga utl√§gg:", l√∂nespecUtl√§gg);
            
            try {
              const result = await l√§ggTillUtl√§ggIL√∂nespec(l√∂nespecId);
              if (result.success) {
                console.log("‚úÖ Utl√§gg tillagda:", result.count);
                if (result.count === 0) {
                  alert("‚ÑπÔ∏è Inga v√§ntande utl√§gg hittades f√∂r denna anst√§lld. Alla utl√§gg √§r redan inkluderade eller bokf√∂rda.");
                } else {
                  alert(`‚úÖ ${result.count} utl√§gg tillagda i l√∂nespecen!`);
                  // Ladda om sidan f√∂r att visa uppdateringen
                  window.location.reload();
                }
              } else {
                console.error("‚ùå Fel:", result.error);
                alert(`‚ùå Fel: ${result.error}`);
              }
            } catch (error) {
              console.error("‚ùå Fel vid till√§gg:", error);
              alert("‚ùå N√•got gick fel!");
            }
          }}
        >
          üí∞ L√§gg till v√§ntande utl√§gg
        </button>
      </div>      <div className="space-y-3">
        {l√∂nespecUtl√§gg.map((utl√§ggItem) => (
          <div key={utl√§ggItem.id} className="bg-slate-800 p-3 rounded-lg">
            <div className="flex justify-between items-start mb-2">
              <div>
                <h5 className="text-white font-medium">{utl√§ggItem.beskrivning}</h5>
                <p className="text-gray-400 text-sm">
                  {new Date(utl√§ggItem.datum).toLocaleDateString("sv-SE")}
                  {utl√§ggItem.kategori && ` ‚Ä¢ ${utl√§ggItem.kategori}`}
                </p>
              </div>
              <div className="text-right">
                <div className="text-white font-bold">
                  {parseFloat(utl√§ggItem.belopp).toLocaleString("sv-SE")} kr
                </div>
                {getStatusBadge(utl√§ggItem.status)}
              </div>
            </div>

            {utl√§ggItem.kommentar && (
              <div className="text-gray-400 text-sm mb-2">{utl√§ggItem.kommentar}</div>
            )}

            <div className="flex justify-between items-center text-xs text-gray-500">
              <span>ID: #{utl√§ggItem.id}</span>
              <div className="flex gap-3">
                {utl√§ggItem.kvitto_fil && <span>üìé Kvitto: {utl√§ggItem.kvitto_fil}</span>}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
