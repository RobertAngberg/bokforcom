//#region Huvud
import { l√§ggTillUtl√§ggSomExtrarad, uppdateraUtl√§ggStatus } from "../actions";

interface Utl√§ggProps {
  l√∂nespecUtl√§gg: any[];
  getStatusBadge: (status: string) => React.ReactElement;
  l√∂nespecId?: number;
  onUtl√§ggAdded?: (tillagdaUtl√§gg: any[]) => void; // Skicka vilka utl√§gg som lades till
}

export default function Utl√§gg({
  l√∂nespecUtl√§gg,
  getStatusBadge,
  l√∂nespecId,
  onUtl√§ggAdded,
}: Utl√§ggProps) {
  //#endregion

  const handleL√§ggTillUtl√§gg = async () => {
    if (!l√∂nespecId) {
      alert("‚ùå Fel: Ingen l√∂nespec ID hittades");
      return;
    }

    const v√§ntandeUtl√§gg = l√∂nespecUtl√§gg.filter((u) => u.status === "V√§ntande");

    if (v√§ntandeUtl√§gg.length === 0) {
      alert("Inga v√§ntande utl√§gg att l√§gga till");
      return;
    }

    try {
      for (const utl√§gg of v√§ntandeUtl√§gg) {
        // Enkel, tydlig funktion
        await l√§ggTillUtl√§ggSomExtrarad(l√∂nespecId, utl√§gg);
        await uppdateraUtl√§ggStatus(utl√§gg.id, "Inkluderat i l√∂nespec");
      }
      alert(`${v√§ntandeUtl√§gg.length} utl√§gg tillagda!`);

      // Uppdatera UI genom callback - riktig React-stil!
      if (onUtl√§ggAdded) {
        onUtl√§ggAdded(v√§ntandeUtl√§gg); // Skicka de utl√§gg som lades till
      }
    } catch (error) {
      console.error("Fel:", error);
      alert("N√•got gick fel!");
    }
  };

  if (l√∂nespecUtl√§gg.length === 0) return null;

  return (
    <div className="bg-slate-700 p-4 rounded-lg">
      <h4 className="text-lg font-bold text-white mb-4 flex items-center gap-2">
        Utl√§gg asdf üéØ VI √ÑR H√ÑR üéØ
      </h4>
      {/* L√§gg till utl√§gg knapp i mitten */}
      <div className="flex justify-center mb-4">
        <button
          className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors font-medium"
          onClick={handleL√§ggTillUtl√§gg}
        >
          üí∞ L√§gg till v√§ntande utl√§gg
        </button>
      </div>{" "}
      <div className="space-y-3">
        {l√∂nespecUtl√§gg.map((utl√§ggItem) => (
          <div key={utl√§ggItem.id} className="bg-slate-800 p-3 rounded-lg">
            <div className="flex justify-between items-start mb-2">
              <div>
                <h5 className="text-white font-medium">{utl√§ggItem.beskrivning}</h5>
                <p className="text-gray-400 text-sm">
                  {new Date(utl√§ggItem.datum).toLocaleDateString("sv-SE")}
                  {utl√§ggItem.kategori && ` ‚Ä¢ ${utl√§ggItem.kategori}`}
                </p>
              </div>
              <div className="text-right">
                <div className="text-white font-bold">
                  {utl√§ggItem.belopp.toLocaleString("sv-SE")} kr
                </div>
                {getStatusBadge(utl√§ggItem.status)}
              </div>
            </div>

            {utl√§ggItem.kommentar && (
              <div className="text-gray-400 text-sm mb-2">{utl√§ggItem.kommentar}</div>
            )}

            <div className="flex justify-between items-center text-xs text-gray-500">
              <span>ID: #{utl√§ggItem.id}</span>
              {utl√§ggItem.kvitto_fil && <span>üìé Kvitto: {utl√§ggItem.kvitto_fil}</span>}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
