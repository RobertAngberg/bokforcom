//#region Huvud
import L√∂nespecCard from "./L√∂nespecView";
import Knapp from "../../_components/Knapp";
import { skapaNyL√∂nespec, taBortL√∂nespec } from "../actions";
import { useState } from "react";

interface L√∂nespecListProps {
  l√∂nespecar: any[];
  anst√§lld: any;
  utl√§gg: any[];
  onF√∂rhandsgranskning: (id: string) => void;
  onBer√§kningarUppdaterade: (l√∂nespecId: string, ber√§kningar: any) => void;
  ber√§knadeV√§rden: any;
  ingenAnimering?: boolean;
  onTaBortL√∂nespec?: () => void;
  taBortLoading?: boolean;
  extrarader: any[];
  setExtrarader: React.Dispatch<React.SetStateAction<any[]>>;
  onL√∂nespecUppdaterad?: () => void; // Nytt callback f√∂r att uppdatera listan
  f√∂retagsprofil?: any;
}

export default function L√∂nespecList({
  l√∂nespecar,
  anst√§lld,
  utl√§gg,
  onF√∂rhandsgranskning,
  onBer√§kningarUppdaterade,
  ber√§knadeV√§rden,
  ingenAnimering,
  onTaBortL√∂nespec,
  taBortLoading,
  onL√∂nespecUppdaterad,
  f√∂retagsprofil,
  extrarader,
}: L√∂nespecListProps) {
  const [skaparNyL√∂nespec, setSkaparNyL√∂nespec] = useState(false);
  const [taBortLaddning, setTaBortLaddning] = useState<Record<string, boolean>>({});

  const handleSkapaNyL√∂nespec = async () => {
    setSkaparNyL√∂nespec(true);
    try {
      const nuvarandeDatum = new Date();
      const m√•nad = nuvarandeDatum.getMonth() + 1;
      const √•r = nuvarandeDatum.getFullYear();

      const resultat = await skapaNyL√∂nespec({
        anst√§lld_id: anst√§lld.id,
        m√•nad,
        √•r,
        period_start: new Date(√•r, m√•nad - 1, 1).toISOString().split("T")[0],
        period_slut: new Date(√•r, m√•nad, 0).toISOString().split("T")[0],
      });

      if (resultat.success) {
        console.log("üîç Semester info:", resultat.semesterInfo);
        let semesterText = "";
        if (resultat.semesterInfo?.success) {
          semesterText = `Semester: ${resultat.semesterInfo.message || ""}`;
        } else if (resultat.semesterInfo?.message) {
          semesterText = `Semester: ${resultat.semesterInfo.message}`;
        }
        alert(`‚úÖ Ny l√∂nespec skapad! ${semesterText}`);
        onL√∂nespecUppdaterad?.(); // Uppdatera listan
      } else {
        alert(`‚ùå Kunde inte skapa l√∂nespec: ${resultat.error}`);
      }
    } catch (error) {
      console.error("‚ùå Fel vid skapande av l√∂nespec:", error);
      alert("‚ùå Kunde inte skapa l√∂nespec");
    } finally {
      setSkaparNyL√∂nespec(false);
    }
  };

  const handleTaBortL√∂nespec = async (l√∂nespecId: string) => {
    if (!confirm("√Ñr du s√§ker p√• att du vill ta bort denna l√∂nespecifikation?")) {
      return;
    }

    setTaBortLaddning((prev) => ({ ...prev, [l√∂nespecId]: true }));
    try {
      const resultat = await taBortL√∂nespec(parseInt(l√∂nespecId));
      if (resultat.success) {
        alert("‚úÖ L√∂nespecifikation borttagen!");
        onL√∂nespecUppdaterad?.(); // Uppdatera listan
      } else {
        alert(`‚ùå Kunde inte ta bort l√∂nespec: ${resultat.message}`);
      }
    } catch (error) {
      console.error("‚ùå Fel vid borttagning av l√∂nespec:", error);
      alert("‚ùå Kunde inte ta bort l√∂nespec");
    } finally {
      setTaBortLaddning((prev) => ({ ...prev, [l√∂nespecId]: false }));
    }
  };
  //#endregion

  //#region Render
  return (
    <div className="space-y-4 max-w-6xl mx-auto">
      {/* Knapp f√∂r att skapa ny l√∂nespec */}
      <div className="flex justify-end mb-4">
        <Knapp
          text="üìù Skapa ny l√∂nespec"
          onClick={handleSkapaNyL√∂nespec}
          loading={skaparNyL√∂nespec}
        />
      </div>

      {l√∂nespecar.length === 0 ? (
        <div className="text-center py-8 text-gray-400">
          Inga l√∂nespecifikationer hittades f√∂r {anst√§lld.f√∂rnamn} {anst√§lld.efternamn}.
        </div>
      ) : (
        l√∂nespecar.map((l√∂nespec) => (
          <L√∂nespecCard
            key={l√∂nespec.id}
            l√∂nespec={l√∂nespec}
            anst√§lld={anst√§lld}
            utl√§gg={utl√§gg}
            onF√∂rhandsgranskning={onF√∂rhandsgranskning}
            onBer√§kningarUppdaterade={onBer√§kningarUppdaterade}
            ber√§knadeV√§rden={ber√§knadeV√§rden}
            ingenAnimering={ingenAnimering}
            onTaBortL√∂nespec={() => handleTaBortL√∂nespec(l√∂nespec.id)}
            taBortLoading={taBortLaddning[l√∂nespec.id] || false}
            f√∂retagsprofil={f√∂retagsprofil}
            extrarader={extrarader}
          />
        ))
      )}
    </div>
  );
  //#endregion
}
